/*	Build script for gradle-packer-plugin
	Copyright Â© 2016-2017  Basil Peace

	This is part of gradle-packer-plugin.

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
	implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/
plugins {
	id 'com.jfrog.artifactory' version '4.4.14'
	id 'de.gliderpilot.semantic-release' version '1.2.0'
	id 'com.gradle.plugin-publish' version '0.9.7'
	id 'com.ofg.uptodate' version '1.6.3'
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven-publish'

group = 'fidata.org'

ext.ghToken = hasProperty('ghToken') ? getProperty('ghToken') : System.getenv('GH_TOKEN') ?: null
System.setProperty('org.ajoberstar.grgit.auth.username', hasProperty('gitUsername') ? getProperty('gitUsername') : System.getenv('GIT_USER') ?: System.getenv('GITCREDENTIALUSERNAME') ?: null)
System.setProperty('org.ajoberstar.grgit.auth.password', hasProperty('gitPassword') ? getProperty('gitPassword') : System.getenv('GIT_PASS') ?: System.getenv('GITCREDENTIALPASSWORD') ?: null)

repositories {
	jcenter()
}

dependencies {
	compile localGroovy()
	compile gradleApi()
	compile group: 'com.samskivert', name: 'jmustache', version: '1.13'
	compile group: 'commons-io', name: 'commons-io', version: '2.5'
	compile group: 'com.fasterxml.uuid', name: 'java-uuid-generator', version: '3.1.4'
}

task wrapper(type: Wrapper) {
	group 'Help'
	gradleVersion = '3.4.1'
}

pluginBundle {
	website = 'https://github.com/FIDATA/gradle-packer-plugin'
	vcsUrl = 'https://github.com/FIDATA/gradle-packer-plugin'
	description = 'Run Packer builds from Gradle'
	tags = ['packer', 'devops', 'vm']
	plugins {
		gradlePackerPlugin {
			id = 'org.fidata.packer'
			displayName = 'Gradle Packer plugin'
		}
	}
}

semanticRelease {
	repo {
		ghToken = project.ghToken
	}
}

ext.isRelease = !version.toString().endsWith('-SNAPSHOT')

publishing {
	publications {
		mavenGroovy(MavenPublication) {
			from components.java
			groupId "gradle.plugin.$group"
			artifact jar
		}
	}
}
artifactory {
	contextUrl = 'https://fidata.jfrog.io/fidata'
	publish {
		repository {
			if (isRelease)
				repoKey = 'plugins-release-local'
			else
				repoKey = 'plugins-snapshot-local'
			username = "${artifactory_user}"
			password = "${artifactory_password}"
			maven = true
		}
		defaults {
			publications('mavenGroovy')
		}
	}
	resolve {
		repository {
			repoKey = 'libs-snapshot'
			username = "${artifactory_user}"
			password = "${artifactory_password}"
			maven = true
		}
	}
}

tasks.release.finalizedBy artifactoryPublish

if (isRelease)
	tasks.release.finalizedBy publishPlugins

task(inputsOutputs).doLast {
	for (t in tasks) {
		if (t.inputs.hasInputs)
			for (f in t.inputs.files)
				logger.lifecycle(sprintf('%s input: %s', [t.name, f.path]))
		if (t.outputs.hasOutput)
			for (f in t.outputs.files)
				logger.lifecycle(sprintf('%s output: %s', [t.name, f.path]))
	}
}
