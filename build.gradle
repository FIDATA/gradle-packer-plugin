#!/usr/bin/env groovy
/*
 * Build script for gradle-packer-plugin
 * Copyright Â© 2016-2018  Basil Peace
 *
 * This file is part of gradle-packer-plugin.
 *
 * This plugin is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * This plugin is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this plugin.  If not, see <https://www.gnu.org/licenses/>.
 */
plugins {
  id 'org.fidata.project.groovy' version '3.0.1'
  id 'org.fidata.plugin' version '3.0.1'
  id 'org.fidata.packer-base'
}

description = 'Runs Packer builds from Gradle'
tags.set(['packer', 'devops', 'vm'])
license = 'LGPL-3.0-or-later'
publicReleases = true
contacts {
  'grv87@yandex.ru' {
    moniker 'Basil Peace'
    github 'grv87'
    roles 'owner', 'developer'
  }
}

ext.rootDir = '.'

apply from: new File(ext.rootDir, 'gradle/dependencies-compile.gradle')

apply from: new File(ext.rootDir, 'gradle/gradle-plugin-markets.gradle')

tasks.codenarcMain.disabledRules.add 'JavaIoPackageAccess'

sourceSets {
  integTest {
    groovy.srcDirs = ['src/integTest/groovy']
    resources.srcDirs = ['src/integTest/resources']
    compileClasspath += sourceSets['main'].output
    runtimeClasspath += output + sourceSets['main'].output
  }
}

plugins.getPlugin('org.fidata.base.jvm').configureIntegrationTestSourceSetClasspath sourceSets['integTest']
plugins.getPlugin('org.fidata.base.jvm').addJUnitDependency sourceSets['integTest']
plugins.getPlugin('org.fidata.base.groovy').addGroovyDependency configurations[sourceSets['integTest'].implementationConfigurationName]

tasks.register('packerValidate-integTest')

for (File f in project.fileTree('src/integTest/resources/org/fidata/gradle/packer/template') { ConfigurableFileTree fileTree ->
  fileTree.include '**/*.json'
}) {
  TaskProvider<PackerValidate> packerValidateIntegTestFile = tasks.register("packerValidate-integTest-${ f.toPath().fileName }", PackerValidate, f)
  tasks.named('packerValidate-integTest').configure { Task packerValidateIntegTest ->
    packerValidateIntegTest.dependsOn packerValidateIntegTestFile
  }
}

tasks.register('integTest', Test) {
  group = 'Verification'
  description = 'Runs integration tests'
  shouldRunAfter 'test'
  dependsOn 'packerValidate-integTest'
  testClassesDirs = sourceSets['integTest'].output.classesDirs
  classpath = sourceSets['integTest'].runtimeClasspath
  reports.junitXml.setDestination new File(xmlReportsDir, 'integTest')
  reports.html.setDestination new File(htmlReportsDir, 'integTest')
}

tasks.named('functionalTest').configure {
  shouldRunAfter 'integTest'
}

dependencies {
  integTestImplementation group: 'pl.pragmatists', name: 'JUnitParams', version: 'latest.release'
}

stutter {
  sparse = true
  java(8) {
    compatibleRange '3.1'
  }
  java(9) {
    compatibleRange '3.1'
  }
}

pluginBundle.plugins {
  packerBasePlugin {
    displayName = 'Packer base plugin'
  }
  packerPlugin {
    displayName = 'Packer plugin'
  }
}

